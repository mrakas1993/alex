{"componentChunkName":"component---src-templates-block-js","path":"/blocks/quotes/basic","result":{"data":{"block":{"id":"23527d00-9953-506a-a7f2-d2fbb340bccf","displayName":"QuoteBasic","src":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { ControlType, applyPropertyControls } from 'property-controls'\n\nconst QuoteBasic = ({ textAlign = 'center', ...props }) => (\n  <section\n    sx={{\n      px: 2,\n      py: [3, 4, 5],\n      textAlign\n    }}\n    {...props}\n  />\n)\n\nQuoteBasic.Content = props => (\n  <blockquote\n    sx={{\n      maxWidth: 'container',\n      mx: 'auto',\n      my: 0,\n      fontSize: [3, 4, 6],\n      lineHeight: 'heading',\n      fontWeight: 'heading'\n    }}\n    {...props}\n  />\n)\n\nQuoteBasic.Author = ({ children, ...props }) =>\n  children ? (\n    <footer\n      sx={{\n        fontSize: 1\n      }}\n      {...props}\n    >\n      &mdash; {children}\n    </footer>\n  ) : null\n\napplyPropertyControls(QuoteBasic, {\n  textAlign: {\n    type: ControlType.Enum,\n    options: ['left', 'center', 'right']\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(QuoteBasic.Content, {\n  children: {\n    title: 'Text',\n    type: ControlType.String,\n    required: true\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(QuoteBasic.Author, {\n  children: {\n    title: 'Text',\n    type: ControlType.String\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\nQuoteBasic.usage = `\n  <QuoteBasic>\n    <QuoteBasic.Content>\n      Вы можете разместить здесь цитату\n    </QuoteBasic.Content>\n    <QuoteBasic.Author>\n      А здесь упомянуть её автора\n    </QuoteBasic.Author>\n  </QuoteBasic>\n`\n\nexport default QuoteBasic\n","transformed":"const BLOCKS_Container = () => jsx(QuoteBasic, null, jsx(QuoteBasic.Content, null, \"\\u0412\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0440\\u0430\\u0437\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C \\u0437\\u0434\\u0435\\u0441\\u044C \\u0446\\u0438\\u0442\\u0430\\u0442\\u0443\"), jsx(QuoteBasic.Author, null, \"\\u0410 \\u0437\\u0434\\u0435\\u0441\\u044C \\u0443\\u043F\\u043E\\u043C\\u044F\\u043D\\u0443\\u0442\\u044C \\u0435\\u0451 \\u0430\\u0432\\u0442\\u043E\\u0440\\u0430\"));\n\nconst BLOCKS_Root = ({\n  children\n}) => {\n  return jsx(BLOCKS_Layout, null, jsx(BLOCKS_Droppable, {\n    droppableId: \"root\"\n  }, (provided, snapshot) => {\n    const allProps = Object.assign(provided.droppableProps, {\n      ref: provided.innerRef,\n      style: {\n        minHeight: '100%'\n      }\n    });\n    return React.createElement('div', allProps, children, provided.placeholder);\n  }));\n};"}},"pageContext":{"id":"23527d00-9953-506a-a7f2-d2fbb340bccf","slug":"blocks/quotes/basic"}}}