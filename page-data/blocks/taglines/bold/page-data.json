{"componentChunkName":"component---src-templates-block-js","path":"/blocks/taglines/bold","result":{"data":{"block":{"id":"31274790-44e5-5f4a-be9d-f5205057942a","displayName":"TaglineBold","src":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { ControlType, applyPropertyControls } from 'property-controls'\n\nconst TaglineBold = props => (\n  <section\n    sx={{\n      maxWidth: 'container',\n      mx: 'auto',\n      px: 2,\n      py: [3, 4, 5]\n    }}\n    {...props}\n  />\n)\n\nTaglineBold.Content = props => (\n  <p\n    sx={{\n      m: 0,\n      fontSize: [3, 4, 6],\n      lineHeight: 'heading',\n      fontWeight: 'heading',\n      'span + span': {\n        ml: 1\n      }\n    }}\n    {...props}\n  />\n)\n\nTaglineBold.Emphasis = props => (\n  <span\n    sx={{\n      color: 'primary'\n    }}\n    {...props}\n  />\n)\n\nTaglineBold.Normal = props => (\n  <span\n    sx={{\n      color: 'text'\n    }}\n    {...props}\n  />\n)\n\napplyPropertyControls(TaglineBold, {\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(TaglineBold.Content, {\n  as: {\n    title: 'Тип Элемента',\n    type: ControlType.Enum,\n    options: ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(TaglineBold.Emphasis, {\n  children: {\n    title: 'Текст',\n    type: ControlType.String\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(TaglineBold.Normal, {\n  children: {\n    title: 'Text',\n    type: ControlType.String,\n    required: true\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\nTaglineBold.usage = `\n  <TaglineBold>\n    <TaglineBold.Content>\n      <TaglineBold.Emphasis>\n      Знаете что привлечёт внимание?\n      </TaglineBold.Emphasis>\n      <TaglineBold.Normal>\n        Толстый слоган отлично подходит для секции текста, которая должена выделяться из остальной части страницы. \n      </TaglineBold.Normal>\n    </TaglineBold.Content>\n  </TaglineBold>\n`\n\nexport default TaglineBold\n","transformed":"const BLOCKS_Container = () => jsx(TaglineBold, null, jsx(TaglineBold.Content, null, jsx(TaglineBold.Emphasis, null, \"\\u0417\\u043D\\u0430\\u0435\\u0442\\u0435 \\u0447\\u0442\\u043E \\u043F\\u0440\\u0438\\u0432\\u043B\\u0435\\u0447\\u0451\\u0442 \\u0432\\u043D\\u0438\\u043C\\u0430\\u043D\\u0438\\u0435?\"), jsx(TaglineBold.Normal, null, \"\\u0422\\u043E\\u043B\\u0441\\u0442\\u044B\\u0439 \\u0441\\u043B\\u043E\\u0433\\u0430\\u043D \\u043E\\u0442\\u043B\\u0438\\u0447\\u043D\\u043E \\u043F\\u043E\\u0434\\u0445\\u043E\\u0434\\u0438\\u0442 \\u0434\\u043B\\u044F \\u0441\\u0435\\u043A\\u0446\\u0438\\u0438 \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430, \\u043A\\u043E\\u0442\\u043E\\u0440\\u0430\\u044F \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D\\u0430 \\u0432\\u044B\\u0434\\u0435\\u043B\\u044F\\u0442\\u044C\\u0441\\u044F \\u0438\\u0437 \\u043E\\u0441\\u0442\\u0430\\u043B\\u044C\\u043D\\u043E\\u0439 \\u0447\\u0430\\u0441\\u0442\\u0438 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u044B.\")));\n\nconst BLOCKS_Root = ({\n  children\n}) => {\n  return jsx(BLOCKS_Layout, null, jsx(BLOCKS_Droppable, {\n    droppableId: \"root\"\n  }, (provided, snapshot) => {\n    const allProps = Object.assign(provided.droppableProps, {\n      ref: provided.innerRef,\n      style: {\n        minHeight: '100%'\n      }\n    });\n    return React.createElement('div', allProps, children, provided.placeholder);\n  }));\n};"}},"pageContext":{"id":"31274790-44e5-5f4a-be9d-f5205057942a","slug":"blocks/taglines/bold"}}}