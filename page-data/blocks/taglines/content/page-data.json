{"componentChunkName":"component---src-templates-block-js","path":"/blocks/taglines/content","result":{"data":{"block":{"id":"1145c2c1-c737-5bc8-a1fb-e7715e2c5fda","displayName":"TaglineContent","src":"/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport { ControlType, applyPropertyControls } from 'property-controls'\n\nconst TaglineContent = ({ textAlign = 'left', ...props }) => (\n  <section\n    sx={{\n      px: 2,\n      py: [3, 4, 5],\n      textAlign\n    }}\n    {...props}\n  />\n)\n\nTaglineContent.Container = props => (\n  <section\n    sx={{\n      maxWidth: 'container',\n      mx: 'auto'\n    }}\n    {...props}\n  />\n)\n\nTaglineContent.Heading = ({ children, ...props }) => (\n  <h3\n    sx={{\n      m: 0,\n      fontSize: [3, 4, 6],\n      lineHeight: 'heading',\n      fontWeight: 'heading'\n    }}\n    {...props}\n  >\n    {children}\n  </h3>\n)\n\nTaglineContent.Paragraph = props => (\n  <p\n    sx={{\n      mt: 0,\n      mb: 3,\n      fontSize: 3,\n      lineHeight: 'body',\n      fontWeight: 'body'\n    }}\n    {...props}\n  />\n)\n\napplyPropertyControls(TaglineContent, {\n  textAlign: {\n    type: ControlType.Enum,\n    options: ['left', 'center', 'right']\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(TaglineContent.Container, {\n  textAlign: {\n    type: ControlType.Enum,\n    options: ['left', 'center', 'right']\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(TaglineContent.Heading, {\n  as: {\n    title: 'Тип Элемента',\n    type: ControlType.Enum,\n    options: ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n  },\n  children: {\n    title: 'Текст',\n    type: ControlType.String\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\napplyPropertyControls(TaglineContent.Paragraph, {\n  as: {\n    title: 'Тип элемента',\n    type: ControlType.Enum,\n    options: ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n  },\n  children: {\n    title: 'Текст',\n    type: ControlType.String\n  },\n  sx: {\n    type: ControlType.Style\n  }\n})\n\nTaglineContent.usage = `\n  <TaglineContent>\n    <TaglineContent.Container>\n      <TaglineContent.Heading>\n        Что такое блок текста?\n      </TaglineContent.Heading>\n      <TaglineContent.Paragraph>\n        Блок текста представляет собой совокупность отдельныйх текстов, которые объединены одной темой.\n      </TaglineContent.Paragraph>\n      <TaglineContent.Paragraph>\n        Блок текста может быть простым, как строка, а может быть компонентом, содержащим несколько текстов.\n      </TaglineContent.Paragraph>\n    </TaglineContent.Container>\n  </TaglineContent>\n`\n\nexport default TaglineContent\n","transformed":"const BLOCKS_Container = () => jsx(TaglineContent, null, jsx(TaglineContent.Container, null, jsx(TaglineContent.Heading, null, \"\\u0427\\u0442\\u043E \\u0442\\u0430\\u043A\\u043E\\u0435 \\u0431\\u043B\\u043E\\u043A \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430?\"), jsx(TaglineContent.Paragraph, null, \"\\u0411\\u043B\\u043E\\u043A \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430 \\u043F\\u0440\\u0435\\u0434\\u0441\\u0442\\u0430\\u0432\\u043B\\u044F\\u0435\\u0442 \\u0441\\u043E\\u0431\\u043E\\u0439 \\u0441\\u043E\\u0432\\u043E\\u043A\\u0443\\u043F\\u043D\\u043E\\u0441\\u0442\\u044C \\u043E\\u0442\\u0434\\u0435\\u043B\\u044C\\u043D\\u044B\\u0439\\u0445 \\u0442\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432, \\u043A\\u043E\\u0442\\u043E\\u0440\\u044B\\u0435 \\u043E\\u0431\\u044A\\u0435\\u0434\\u0438\\u043D\\u0435\\u043D\\u044B \\u043E\\u0434\\u043D\\u043E\\u0439 \\u0442\\u0435\\u043C\\u043E\\u0439.\"), jsx(TaglineContent.Paragraph, null, \"\\u0411\\u043B\\u043E\\u043A \\u0442\\u0435\\u043A\\u0441\\u0442\\u0430 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u043C, \\u043A\\u0430\\u043A \\u0441\\u0442\\u0440\\u043E\\u043A\\u0430, \\u0430 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442\\u043E\\u043C, \\u0441\\u043E\\u0434\\u0435\\u0440\\u0436\\u0430\\u0449\\u0438\\u043C \\u043D\\u0435\\u0441\\u043A\\u043E\\u043B\\u044C\\u043A\\u043E \\u0442\\u0435\\u043A\\u0441\\u0442\\u043E\\u0432.\")));\n\nconst BLOCKS_Root = ({\n  children\n}) => {\n  return jsx(BLOCKS_Layout, null, jsx(BLOCKS_Droppable, {\n    droppableId: \"root\"\n  }, (provided, snapshot) => {\n    const allProps = Object.assign(provided.droppableProps, {\n      ref: provided.innerRef,\n      style: {\n        minHeight: '100%'\n      }\n    });\n    return React.createElement('div', allProps, children, provided.placeholder);\n  }));\n};"}},"pageContext":{"id":"1145c2c1-c737-5bc8-a1fb-e7715e2c5fda","slug":"blocks/taglines/content"}}}