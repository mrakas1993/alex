{"version":3,"sources":["webpack:///./src/components/block.js","webpack:///./src/templates/block.js","webpack:///./src/components/seo.js"],"names":["Container","components","scope","React","jsx","Styled","blocks","controls","PropertyControlsTable","name","table","sx","m","tr","th","width","code","Object","entries","map","key","val","td","title","type","defaultValue","Block","block","component","displayName","reduce","acc","test","join","root","styles","boxSizing","body","margin","display","alignItems","py","px","borderBottom","borderColor","to","height","viewBox","fill","xmlns","d","color","textDecoration","fontSize","lineHeight","h1","fontWeight","mb","p","backgroundColor","transformed","h3","propertyControls","filter","mt","pre","usage","trim","src","pageQuery","data","SEO","description","lang","meta","site","titleFormatted","siteMetadata","metaDescription","htmlAttributes","content","property","image","author","concat","defaultProps","propTypes","PropTypes","string","arrayOf","object","isRequired"],"mappings":"4mEAaQA,EAAcC,YAIhBC,EAAK,OACTC,UACAC,QACAC,YACGJ,GACAK,GACAC,GAGCC,EAAwB,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUE,EAAb,EAAaA,KAAb,OAC5B,YAAC,IAAOC,MAAR,CAAcC,GAAI,CAAEC,EAAG,IACrB,YAAC,IAAOC,GAAR,KACE,YAAC,IAAOC,GAAR,CAAWH,GAAI,CAAEI,MAAO,QACtB,YAAC,IAAOC,KAAR,KAAcP,IAEhB,YAAC,IAAOK,GAAR,CAAWH,GAAI,CAAEI,MAAO,QAAxB,QACA,YAAC,IAAOD,GAAR,CAAWH,GAAI,CAAEI,MAAO,QAAxB,kBAEDE,OAAOC,QAAQX,GAAUY,KAAI,yBAAEC,EAAF,KAAOC,EAAP,YAC5B,YAAC,IAAOR,GAAR,CAAWO,IAAKA,GACd,YAAC,IAAOE,GAAR,KAAYD,EAAIE,OAASH,GACzB,YAAC,IAAOE,GAAR,KACE,YAAC,IAAON,KAAR,KAAcK,EAAIG,OAEpB,YAAC,IAAOF,GAAR,KAAYD,EAAII,cAAgB,cA0JzBC,EApJD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAETC,EAAYtB,EAAOqB,EAAME,aAEzB5B,EAAagB,OAAOC,QAAQU,GAAWE,QAAO,SAACC,EAAD,GAAsB,IAAD,SAAdX,EAAc,KAATC,EAAS,KApC/C,SAASW,KAqCjBZ,KAEdW,EADsB,CAACJ,EAAME,YAAaT,GAAKa,KAAK,MAC/BZ,GAGvB,OAAOU,IACN,IAEH,OACE,YAAC,IAAOG,KAAR,KACE,YAAC,IAAD,CACEC,OAAQ,CACN,IAAK,CACHC,UAAW,cAEbC,KAAM,CACJC,OAAQ,MAId,YAAC,IAAD,CAAKf,MAAOI,EAAME,cAClB,sBACElB,GAAI,CACF4B,QAAS,OACTxB,MAAO,OACPyB,WAAY,SACZC,GAAI,EACJC,GAAI,EACJC,aAAc,YACdC,YAAa,WAGf,YAAC,OAAD,CAAMC,GAAG,WACT,mBAAK9B,MAAM,KAAK+B,OAAO,KAAKC,QAAQ,cAAcC,KAAK,OAAOC,MAAM,8BAClE,oBAAMC,EAAE,qDAAqDF,KAAK,UAClE,oBAAME,EAAE,sDAAsDF,KAAK,UACnE,oBAAME,EAAE,8DAA8DF,KAAK,UAC3E,oBAAME,EAAE,6CAA6CF,KAAK,UAC1D,oBAAME,EAAE,8CAA8CF,KAAK,UAC3D,oBAAME,EAAE,sDAAsDF,KAAK,UACnE,oBAAME,EAAE,uDAAuDF,KAAK,UACpE,oBAAME,EAAE,uDAAuDF,KAAK,UACpE,oBAAME,EAAE,+DAA+DF,KAAK,UAC5E,oBAAME,EAAE,mDAAmDF,KAAK,UAChE,oBAAME,EAAE,mDAAmDF,KAAK,UAChE,oBAAME,EAAE,2DAA2DF,KAAK,UACxE,oBAAME,EAAE,mDAAmDF,KAAK,UAChE,oBAAME,EAAE,qDAAqDF,KAAK,UAClE,oBAAME,EAAE,yDAAyDF,KAAK,UACtE,oBAAME,EAAE,+CAA+CF,KAAK,UAC5D,oBAAME,EAAE,iDAAiDF,KAAK,UAC9D,oBAAME,EAAE,qDAAqDF,KAAK,UAClE,oBAAME,EAAE,mDAAmDF,KAAK,UAChE,oBAAME,EAAE,oDAAoDF,KAAK,UACjE,oBAAME,EAAE,wDAAwDF,KAAK,UACrE,oBAAME,EAAE,gCAAgCF,KAAK,UAC7C,oBAAME,EAAE,iCAAiCF,KAAK,UAC9C,oBAAME,EAAE,qCAAqCF,KAAK,YAapD,YAAC,OAAD,CACEH,GAAG,UACHlC,GAAI,CACFwC,MAAO,UACPC,eAAgB,OAChBC,SAAU,CAAC,EAAG,EAAG,GACjBC,WAAY,IANhB,cAWA,oBAAM3C,GAAI,CAAE+B,GAAI,EAAGW,SAAU,IAA7B,KACA,YAAC,IAAOE,GAAR,CACE5C,GAAI,CACFC,EAAG,EACH0C,WAAY,EACZE,WAAY,OACZH,SAAU,CAAC,EAAG,EAAG,KAGlB1B,EAAME,cAGX,wBACE,uBACElB,GAAI,CACF8C,GAAI,CAAC,EAAG,EAAG,GACXC,EAAG,CAAC,EAAG,EAAG,GACVf,aAAc,YACdC,YAAa,SACbe,gBAAiB,YAGnB,YAAC,eAAD,CACEhD,GAAI,CACFgD,gBAAiB,cAEnBzD,MAAOA,EACPc,KAAMW,EAAMiC,eAGhB,YAAC5D,EAAD,KACE,YAAC,IAAO6D,GAAR,0BACA,YAAC,EAAD,CACEpD,KAAMkB,EAAME,YACZtB,SAAUqB,EAAUkC,mBAErB7C,OAAOC,QAAQjB,GACb8D,QAAO,2CAAoBD,oBAC3B3C,KAAI,yBAAEC,EAAF,KAAOC,EAAP,YACH,YAAC,EAAD,CACED,IAAKA,EACLX,KAAMW,EACNb,SAAUc,EAAIyC,sBAGpB,YAAC,IAAOD,GAAR,CAAWlD,GAAI,CAAEqD,GAAI,CAAC,EAAG,EAAG,KAA5B,iBACA,YAAC,IAAOC,IAAR,KACG,uEACatC,EAAME,YADnB,kEAICD,EAAUsC,MAAMC,OAChB,OAEJ,YAAC,IAAON,GAAR,oBACA,YAAC,IAAOI,IAAR,KAAatC,EAAMyC,SCvLhBC,EAAS,aAWP,0BAAW1C,EAAX,EAAG2C,KAAQ3C,MAAX,OAAyB,kBAAC,EAAD,CAAOA,MAAOA,M,wGCXhD4C,EAAM,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMnD,EAAY,EAAZA,MAC9BoD,EAD0C,OAC1CA,KAcFC,EAAiBrD,EAAK,UACrBA,EADqB,cACVoD,EAAKE,aAAatD,OAChCoD,EAAKE,aAAatD,MAEhBuD,EAAkBN,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFC,KAAM,CACJ,CACEjE,KAAK,cACLuE,QAASF,GAEX,CACEG,SAAS,WACTD,QAASJ,GAEX,CACEK,SAAS,iBACTD,QAASF,GAEX,CACEG,SAAS,UACTD,QAAQ,WAEV,CACEC,SAAU,WACVD,QAASL,EAAKE,aAAaK,OAE7B,CACEzE,KAAK,eACLuE,QAAQ,uBAEV,CACEvE,KAAK,kBACLuE,QAASL,EAAKE,aAAaM,QAE7B,CACE1E,KAAK,gBACLuE,QAASJ,GAEX,CACEnE,KAAK,sBACLuE,QAASF,GAEX,CACErE,KAAM,gBACNuE,QAASL,EAAKE,aAAaK,QAE7BE,OAAOV,IAET,+BAAQE,KAKdL,EAAIc,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNF,YAAY,IAGdD,EAAIe,UAAY,CACdd,YAAae,IAAUC,OACvBf,KAAMc,IAAUC,OAChBd,KAAMa,IAAUE,QAAQF,IAAUG,QAClCnE,MAAOgE,IAAUC,OAAOG,YAGXpB","file":"component---src-templates-block-js-2d5ad65b27493c0e28a0.js","sourcesContent":["/** @jsx jsx */\nimport React from 'react'\nimport { Link } from 'gatsby'\nimport { jsx, Styled } from 'theme-ui'\nimport * as components from '@theme-ui/components'\nimport { Global } from '@emotion/core'\n\nimport * as blocks from '@blocks/react'\nimport { InlineRender } from 'blocks-ui'\nimport * as controls from 'property-controls'\n\nimport SEO from './seo'\n\nconst { Container } = components\n\nconst isComponent = name => /^[A-Z]/.test(name)\n\nconst scope = {\n  React,\n  jsx,\n  Styled,\n  ...components,\n  ...blocks,\n  ...controls\n}\n\nconst PropertyControlsTable = ({ controls, name }) => (\n  <Styled.table sx={{ m: 0 }}>\n    <Styled.tr>\n      <Styled.th sx={{ width: '33%' }}>\n        <Styled.code>{name}</Styled.code>\n      </Styled.th>\n      <Styled.th sx={{ width: '16%' }}>Type</Styled.th>\n      <Styled.th sx={{ width: '33%' }}>Default Value</Styled.th>\n    </Styled.tr>\n    {Object.entries(controls).map(([key, val]) => (\n      <Styled.tr key={key}>\n        <Styled.td>{val.title || key}</Styled.td>\n        <Styled.td>\n          <Styled.code>{val.type}</Styled.code>\n        </Styled.td>\n        <Styled.td>{val.defaultValue || 'None'}</Styled.td>\n      </Styled.tr>\n    ))}\n  </Styled.table>\n)\n\nconst Block = ({ block }) => {\n  /*eslint import/namespace: [2, { allowComputed: true }]*/\n  const component = blocks[block.displayName]\n\n  const components = Object.entries(component).reduce((acc, [key, val]) => {\n    if (isComponent(key)) {\n      const componentName = [block.displayName, key].join('.')\n      acc[componentName] = val\n    }\n\n    return acc\n  }, {})\n\n  return (\n    <Styled.root>\n      <Global\n        styles={{\n          '*': {\n            boxSizing: 'border-box'\n          },\n          body: {\n            margin: 0\n          }\n        }}\n      />\n      <SEO title={block.displayName} />\n      <header\n        sx={{\n          display: 'flex',\n          width: '100%',\n          alignItems: 'center',\n          py: 2,\n          px: 3,\n          borderBottom: '1px solid',\n          borderColor: 'border'\n        }}\n      >\n        <Link to=\"/blocks\">\n        <svg width=\"25\" height=\"25\" viewBox=\"0 0 250 250\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M125 134.757L61 107.859V194.402L125 221.3V134.757Z\" fill=\"black\" />\n          <path d=\"M125 134.757L189 107.859V194.402L125 221.3V134.757Z\" fill=\"black\" />\n          <path d=\"M61 107.859L125 83.2998L189 107.859L125 134.757L61 107.859Z\" fill=\"black\" />\n          <path d=\"M122 139.3L67 116.3V190.3L122 213.3V139.3Z\" fill=\"white\" />\n          <path d=\"M128 139.3L183 116.3V190.3L128 213.3V139.3Z\" fill=\"white\" />\n          <path d=\"M70 111.3L125 90.2998L180 111.3L125 134.3L70 111.3Z\" fill=\"white\" />\n          <path d=\"M186 160.398L122 133.499V220.042L186 246.94V160.398Z\" fill=\"black\" />\n          <path d=\"M186 160.398L250 133.499V220.042L186 246.94V160.398Z\" fill=\"black\" />\n          <path d=\"M122 133.499L186 108.94L250 133.499L186 160.398L122 133.499Z\" fill=\"black\" />\n          <path d=\"M183 164.94L128 141.94V215.94L183 238.94V164.94Z\" fill=\"white\" />\n          <path d=\"M189 164.94L244 141.94V215.94L189 238.94V164.94Z\" fill=\"white\" />\n          <path d=\"M131 136.94L186 115.94L241 136.94L186 159.94L131 136.94Z\" fill=\"white\" />\n          <path d=\"M64 160.398L0 133.499V220.042L64 246.94V160.398Z\" fill=\"black\" />\n          <path d=\"M64 160.398L128 133.499V220.042L64 246.94V160.398Z\" fill=\"black\" />\n          <path d=\"M0 133.499L64 108.94L128 133.499L64 160.398L0 133.499Z\" fill=\"black\" />\n          <path d=\"M61 164.94L6 141.94V215.94L61 238.94V164.94Z\" fill=\"white\" />\n          <path d=\"M67 164.94L122 141.94V215.94L67 238.94V164.94Z\" fill=\"white\" />\n          <path d=\"M9 136.94L64 115.94L119 136.94L64 159.94L9 136.94Z\" fill=\"white\" />\n          <path d=\"M125 54.4576L61 27.5593V114.102L125 141V54.4576Z\" fill=\"black\" />\n          <path d=\"M125 54.4576L189 27.5593V114.102L125 141V54.4576Z\" fill=\"black\" />\n          <path d=\"M61 27.5593L125 3L189 27.5593L125 54.4576L61 27.5593Z\" fill=\"black\" />\n          <path d=\"M122 59L67 36V110L122 133V59Z\" fill=\"white\" />\n          <path d=\"M128 59L183 36V110L128 133V59Z\" fill=\"white\" />\n          <path d=\"M70 31L125 10L180 31L125 54L70 31Z\" fill=\"white\" />\n        </svg>\n          {/* <img\n            alt=\"logo\"\n            src=\"src/assets/images/favicon.png\"\n            sx={{\n              mt: -1,\n              height: 24,\n              verticalAlign: 'middle',\n              mr: 2\n            }}\n          /> */}\n        </Link>\n        <Link\n          to=\"/blocks\"\n          sx={{\n            color: 'inherit',\n            textDecoration: 'none',\n            fontSize: [1, 1, 1],\n            lineHeight: 1\n          }}\n        >\n          WebBuilder\n        </Link>\n        <span sx={{ px: 1, fontSize: 0 }}>/</span>\n        <Styled.h1\n          sx={{\n            m: 0,\n            lineHeight: 1,\n            fontWeight: 'body',\n            fontSize: [1, 1, 1]\n          }}\n        >\n          {block.displayName}\n        </Styled.h1>\n      </header>\n      <main>\n        <section\n          sx={{\n            mb: [3, 4, 5],\n            p: [3, 4, 5],\n            borderBottom: '1px solid',\n            borderColor: 'border',\n            backgroundColor: '#fafafa'\n          }}\n        >\n          <InlineRender\n            sx={{\n              backgroundColor: 'background'\n            }}\n            scope={scope}\n            code={block.transformed}\n          />\n        </section>\n        <Container>\n          <Styled.h3>Property controls</Styled.h3>\n          <PropertyControlsTable\n            name={block.displayName}\n            controls={component.propertyControls}\n          />\n          {Object.entries(components)\n            .filter(([_, val]) => !!val.propertyControls)\n            .map(([key, val]) => (\n              <PropertyControlsTable\n                key={key}\n                name={key}\n                controls={val.propertyControls}\n              />\n            ))}\n          <Styled.h3 sx={{ mt: [3, 4, 5] }}>Example usage</Styled.h3>\n          <Styled.pre>\n            {\"/** @jsx jsx */\\nimport { jsx } from 'theme-ui'\\n\" +\n              `import { ${block.displayName} }  from '@blocks/components'` +\n              '\\n\\n' +\n              'export default () => (\\n  ' +\n              component.usage.trim() +\n              '\\n)'}\n          </Styled.pre>\n          <Styled.h3>Source code</Styled.h3>\n          <Styled.pre>{block.src}</Styled.pre>\n        </Container>\n      </main>\n    </Styled.root>\n  )\n}\n\nexport default Block\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Block from '../components/block'\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    block: block(id: { eq: $id }) {\n      id\n      displayName\n      src\n      transformed\n    }\n  }\n`\n\nexport default ({ data: { block } }) => <Block block={block} />\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const titleFormatted = title\n    ? `${title} — ${site.siteMetadata.title}`\n    : site.siteMetadata.title\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang\n      }}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription\n        },\n        {\n          property: `og:title`,\n          content: titleFormatted\n        },\n        {\n          property: `og:description`,\n          content: metaDescription\n        },\n        {\n          property: `og:type`,\n          content: `website`\n        },\n        {\n          property: 'og:image',\n          content: site.siteMetadata.image\n        },\n        {\n          name: `twitter:card`,\n          content: `summary_large_image`\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author\n        },\n        {\n          name: `twitter:title`,\n          content: titleFormatted\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription\n        },\n        {\n          name: 'twitter:image',\n          content: site.siteMetadata.image\n        }\n      ].concat(meta)}\n    >\n      <title>{titleFormatted}</title>\n    </Helmet>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n}\n\nexport default SEO\n"],"sourceRoot":""}